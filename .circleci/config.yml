version: 2.1
jobs:
  # Checks out the code and persists it to a CircleCI workspace.
  checkout_code:
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - run:
          name: Creating Docker cache key
          command: .circleci/create_docker_cache_key.sh
      - persist_to_workspace:
          root: .
          paths: [.]

  build_docker:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          name: Restoring Docker precheck build cache
          keys: ['docker-precheck-cache-{{ checksum ".circleci/docker_cache_key" }}']
      - run:
          name: Skipping job if the currently pushed Docker image is fresh
          command: .circleci/check_docker_staleness.sh
      - run:
          name: Pulling last Docker image to use as cache
          command: docker pull jschaf/blog-builder:latest
      - run:
          name: Building Docker image
          command: |
            make EXTRA_DOCKER_BUILD_ARGS=--cache-from=jschaf/blog-builder:latest docker-image
      - run:
          name: Pushing Docker image
          command: |
            echo "${DOCKER_HUB_TOKEN}" |
                docker login --username jschaf --password-stdin
            make push-docker-image
      - save_cache:
          name: Saving cache for node_modules precheck key
          key: docker-precheck-cache-{{ checksum ".circleci/docker_cache_key" }}
          paths: [".circleci/docker_precheck_cache_key"]

  deploy_site:
    docker:
      - image: jschaf/blog-builder:latest
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Deploying the site
          command: make deploy

workflows:
  version: 2
  deploy_workflow:
    jobs:
      - checkout_code
      - build_docker:
          requires: [checkout_code]
      - deploy_site:
          requires: [checkout_code, build_docker]
